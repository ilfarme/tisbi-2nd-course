program project1;

type
  pSTreeNode = ^TSTreeNode;
  TSTreeNode = record
    info: char;
    key:integer;
    left:pSTreeNode;
    right:pSTreeNode;
  end;

function Search(akey:integer):pSTreeNode;
var pTemp:pSTreeNode;
begin
  pTemp:pRoot;
  result:nil;
  WriteLn('');
  while (pTemp <> nil) do
if (akey = pTemp^.key) then
begin result:=pTemp; break; end
  else if (akey < pTemp^.key) then pTemp:=pTemp^.left
  else pTemp:=pTemp^.right;
end;

procedure AddNode(var pTemp:pSTreeNode; akey:integer);
begin
  if (pTemp=nil) then
  begin
    New(pTemp);
    pTemp^.key:=akey;
    pTemp^.info:=char;
    pTemp^.left:=nil;
    pTemp^.right:=nil;
  end
  else if (akey < pTemp^.key) then
  AddNode(pTemp^.left, akey)
  else if (akey > pTemp^.key) then
  AddNode (pTemp^.right, akey)
  else //обработка неуникального ключа
end;

var
  pRoot:pSTreeNode;
  menu:byte;
begin
  repeat
    WriteLn('1. Поиск вершины с заданным значением ключа с выводом счётчика числа появлений данного ключа');
    WriteLn('2. Добавление новой вершины в соответствии со значением её ключа или увеличение счётчика числа появлений');
    WriteLn('3. ');
    WriteLn('4. ');
    WriteLn('5. ');
    WriteLn('6. Выход из программы');
    Write('Введите значение: ');
    ReadLn(menu);
  until menu=6;
end.

