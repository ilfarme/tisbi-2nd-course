unit Unit2;

{$mode objfpc}{$H+}

interface

Uses Classes, SysUtils, Dialogs, Unit1;
type
 TCircle=class
   private
     x,y:integer;
     r:integer;
     sh,v:integer;   {!!!!}
     public
       constructor Create; overload;
       constructor Create(ax,ay,ar:integer);  overload;
       destructor Destroy;
       function GetX:integer;
       function GetY:integer;
       function GetR:integer;
       procedure SetXY(ax,ay:integer);
       procedure SetR(ar:integer);
       procedure MoveTo(ax,ay:integer);
       procedure Show;
 end;



implementation

constructor TCircle.Create;
begin
  x:=0; y:=0; r:=0;  {sh:=0;     {!!!!!!}  }
  end;

constructor TCircle.Create(ax,ay,ar:integer);
begin
  x:=ax; y:=ay; r:=ar;
end;

destructor TCircle.Destroy;
begin
  free;
end;

function TCircle.GetX:integer;
begin
  result:=x;
  end;

function TCircle.GetY:integer;
begin
  result:=y;
  end;

function TCircle.GetR:integer;
begin
  result:=r;
  end;

procedure TCircle.SetXY(ax,ay:integer);
begin
  x:=ax;
  y:= ay;
end;

procedure TCircle.SetR(ar:integer);
begin
  r:=ar;
end;

procedure TCircle.Show;
{Var ArrOfCircs: array [1..100] of TCircle;
  i:integer; }
begin
  Form1.Image1.Canvas.Ellipse(x-r,y-r,x+r,y+r);
 { for i:=1 to 100 do ArrOfCircs[i].MoveTo(10,10);  }
 { Form1.Image1.Canvas.Rectangle(x,y,x+sh,y+v);                {!!!!!!}  }
  end;

procedure TCircle.MoveTo(ax,ay:integer);
begin
  Show;
  x:=x+ax; y:=y+ay;
  Show;
  end;

end.

